// <auto-generated />
using System;
using ControlePagamentoEntidades.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControlePagamentoEntidades.Migrations
{
    [DbContext(typeof(SistemaCPEContext))]
    [Migration("20221201184647_AtualizaBD3")]
    partial class AtualizaBD3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ControlePagamentoEntidades.Models.EntidadeModel", b =>
                {
                    b.Property<int>("EntidadeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntidadeID"), 1L, 1);

                    b.Property<string>("EntidadeCNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntidadeNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntidadeID");

                    b.ToTable("Entidades");
                });

            modelBuilder.Entity("ControlePagamentoEntidades.Models.PagamentoModel", b =>
                {
                    b.Property<int>("PagamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagamentoID"), 1L, 1);

                    b.Property<DateTime>("PagamentoData")
                        .HasColumnType("datetime2");

                    b.Property<int>("PagamentoSeq")
                        .HasColumnType("int");

                    b.Property<double>("PagamentoValor")
                        .HasColumnType("float");

                    b.Property<int?>("ProcessoModelProcessoID")
                        .HasColumnType("int");

                    b.HasKey("PagamentoID");

                    b.HasIndex("ProcessoModelProcessoID");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("ControlePagamentoEntidades.Models.ProcessoModel", b =>
                {
                    b.Property<int>("ProcessoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcessoID"), 1L, 1);

                    b.Property<int?>("EntidadeModelEntidadeID")
                        .HasColumnType("int");

                    b.Property<string>("ProcessoNumero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessoSituacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProcessoValorTotal")
                        .HasColumnType("float");

                    b.HasKey("ProcessoID");

                    b.HasIndex("EntidadeModelEntidadeID");

                    b.ToTable("Processos");
                });

            modelBuilder.Entity("ControlePagamentoEntidades.Models.PagamentoModel", b =>
                {
                    b.HasOne("ControlePagamentoEntidades.Models.ProcessoModel", "ProcessoModel")
                        .WithMany()
                        .HasForeignKey("ProcessoModelProcessoID");

                    b.Navigation("ProcessoModel");
                });

            modelBuilder.Entity("ControlePagamentoEntidades.Models.ProcessoModel", b =>
                {
                    b.HasOne("ControlePagamentoEntidades.Models.EntidadeModel", "EntidadeModel")
                        .WithMany()
                        .HasForeignKey("EntidadeModelEntidadeID");

                    b.Navigation("EntidadeModel");
                });
#pragma warning restore 612, 618
        }
    }
}
